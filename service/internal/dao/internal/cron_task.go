// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CronTaskDao is the data access object for table cron_task.
type CronTaskDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns CronTaskColumns // columns contains all the column names of Table for convenient usage.
}

// CronTaskColumns defines and stores column names for table cron_task.
type CronTaskColumns struct {
	Id          string //
	CronUid     string //
	Name        string // 定时任务名称
	Content     string // 定时任务内容
	CronExpr    string // 定时任务表达式
	LastrunTime string // 最后执行时间
	NextrunTime string //
	Status      string // 状态 running  stopped
	Creater     string // 创建人
	Updater     string // 更新人
	Created     string //
	Updated     string //
}

//  cronTaskColumns holds the columns for table cron_task.
var cronTaskColumns = CronTaskColumns{
	Id:          "id",
	CronUid:     "cron_uid",
	Name:        "name",
	Content:     "content",
	CronExpr:    "cron_expr",
	LastrunTime: "lastrun_time",
	NextrunTime: "nextrun_time",
	Status:      "status",
	Creater:     "creater",
	Updater:     "updater",
	Created:     "created",
	Updated:     "updated",
}

// NewCronTaskDao creates and returns a new DAO object for table data access.
func NewCronTaskDao() *CronTaskDao {
	return &CronTaskDao{
		group:   "default",
		table:   "cron_task",
		columns: cronTaskColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CronTaskDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CronTaskDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CronTaskDao) Columns() CronTaskColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CronTaskDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CronTaskDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CronTaskDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
