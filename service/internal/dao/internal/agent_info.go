// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// AgentInfoDao is the data access object for table agent_info.
type AgentInfoDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns AgentInfoColumns // columns contains all the column names of Table for convenient usage.
}

// AgentInfoColumns defines and stores column names for table agent_info.
type AgentInfoColumns struct {
	Id             string //
	Peerid         string // 节点id
	Name           string // agent名称
	ExpectedStatus string // 期望状态
	Status         string //
	IsDefault      string //
	Timeout        string // 启动超时时间
	Created        string //
	Updated        string //
}

//  agentInfoColumns holds the columns for table agent_info.
var agentInfoColumns = AgentInfoColumns{
	Id:             "id",
	Peerid:         "peerid",
	Name:           "name",
	ExpectedStatus: "expected_status",
	Status:         "status",
	IsDefault:      "is_default",
	Timeout:        "timeout",
	Created:        "created",
	Updated:        "updated",
}

// NewAgentInfoDao creates and returns a new DAO object for table data access.
func NewAgentInfoDao() *AgentInfoDao {
	return &AgentInfoDao{
		group:   "default",
		table:   "agent_info",
		columns: agentInfoColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *AgentInfoDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *AgentInfoDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *AgentInfoDao) Columns() AgentInfoColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *AgentInfoDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *AgentInfoDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *AgentInfoDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
