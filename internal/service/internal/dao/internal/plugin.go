// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PluginDao is the data access object for table plugin.
type PluginDao struct {
	table   string        // table is the underlying table name of the DAO.
	group   string        // group is the database configuration group name of current DAO.
	columns PluginColumns // columns contains all the column names of Table for convenient usage.
}

// PluginColumns defines and stores column names for table plugin.
type PluginColumns struct {
	Id          string //
	Uuid        string // 插件uuid
	Name        string // 插件名
	PackageName string // 包名
	Os          string // 操作系统
	Arch        string // 架构
	Md5         string // 包md5名称
	Creater     string // 创建人
	Updater     string // 更新人
	Created     string //
	Updated     string //
}

//  pluginColumns holds the columns for table plugin.
var pluginColumns = PluginColumns{
	Id:          "id",
	Uuid:        "uuid",
	Name:        "name",
	PackageName: "package_name",
	Os:          "os",
	Arch:        "arch",
	Md5:         "md5",
	Creater:     "creater",
	Updater:     "updater",
	Created:     "created",
	Updated:     "updated",
}

// NewPluginDao creates and returns a new DAO object for table data access.
func NewPluginDao() *PluginDao {
	return &PluginDao{
		group:   "default",
		table:   "plugin",
		columns: pluginColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PluginDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PluginDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PluginDao) Columns() PluginColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PluginDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PluginDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PluginDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
