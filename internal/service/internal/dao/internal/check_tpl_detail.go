// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CheckTplDetailDao is the data access object for table check_tpl_detail.
type CheckTplDetailDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns CheckTplDetailColumns // columns contains all the column names of Table for convenient usage.
}

// CheckTplDetailColumns defines and stores column names for table check_tpl_detail.
type CheckTplDetailColumns struct {
	Id     string //
	Tid    string // 模板id
	Cid    string // 检查项id
	Sort   string // 排序
	Weight string // 权重
}

//  checkTplDetailColumns holds the columns for table check_tpl_detail.
var checkTplDetailColumns = CheckTplDetailColumns{
	Id:     "id",
	Tid:    "tid",
	Cid:    "cid",
	Sort:   "sort",
	Weight: "weight",
}

// NewCheckTplDetailDao creates and returns a new DAO object for table data access.
func NewCheckTplDetailDao() *CheckTplDetailDao {
	return &CheckTplDetailDao{
		group:   "default",
		table:   "check_tpl_detail",
		columns: checkTplDetailColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CheckTplDetailDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CheckTplDetailDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CheckTplDetailDao) Columns() CheckTplDetailColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CheckTplDetailDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CheckTplDetailDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CheckTplDetailDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
